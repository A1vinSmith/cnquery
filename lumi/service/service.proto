syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "go.mondoo.io/mondoo/lumi/lumi.proto";

package mondoo.lumi.service;
option go_package = "service";

// Lumi service
service Lumi {
  // returns all available resources
  rpc ListResources(Empty) returns (ResourceList);

  // returns all resources and fields
  rpc GetSchema(Empty) returns (mondoo.lumi.Schema);

  // returns the list of fields for a given resource
  // TODO: I am not sure why we need CreateResource and ListFields
  rpc ListFields(FieldsQuery) returns (Fields);

  // returns informaion about a specific resource
  rpc CreateResource(ResourceArguments) returns (mondoo.lumi.ResourceID);

  // essentially returns the result of a field
  // this would return either a resource or raw data
  rpc GetField(FieldArguments) returns (FieldReturn);
}

message Empty {}

message ResourceList {
  repeated string resources = 1;
}

message Fields {
  map<string, mondoo.lumi.Field> fields = 1;
}

message FieldsQuery {
  // resource name
	string name = 1;
}

message ResourceArguments {
	string name = 1;
  map<string, string> named = 2;
}

message FieldArguments {
	string name = 1;
	string id = 2;
	string field = 3;
}

message FieldReturn {
  bytes data = 3 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}
